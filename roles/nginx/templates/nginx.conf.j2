server {
    listen 80;
    server_name {{ DOMAIN }};

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;
    ssl_dhparam /etc/letsencrypt/live/{{ DOMAIN }}/dhparams.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/{{ DOMAIN }}/chain.pem;

    resolver 8.8.8.8 8.8.4.4 valid=86400;
	
    client_max_body_size 1024m;
    
    location / {
    	proxy_pass http://{{ PROXY_PASS_HOST }}:{{ PROXY_PASS_PORT }};
    	proxy_redirect off;
    	proxy_buffering off;
    	proxy_set_header        Host    $host;
    	proxy_set_header        X-Real-IP       $remote_addr;
    	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    
    	add_header Front-End-Https on;
    	#include /etc/nginx/proxy_params;
    }
    
    location = /robots.txt {
    	deny all;
    	log_not_found off;
    	access_log off;
    }
    
    location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README){
    	deny all;
    }

   # Pass the ACME challenge from letsencrypt to a directory within the container

   location /.well-known/acme-challenge {
     alias /etc/letsencrypt/webrootauth/.well-known/acme-challenge;
     location ~ /.well-known/acme-challenge/(.*) {
       add_header Content-Type application/jose+json;
     }
   }

}
