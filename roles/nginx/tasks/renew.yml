- name: define certbot arguments
  set_fact:
    certbot_cmd: "{{ ['certonly', '--server', 'https://acme-staging.api.letsencrypt.org/directory'] if not PRODUCTION else ['certonly'] }}"
    certbot_args: "{{ ['--webroot', '--webroot-path', '/etc/letsencrypt/webrootauth/', '--email', '{{ EMAIL_ADDRESS }}', '--agree-tos', '--non-interactive', '--force-renewal'] }}"

- name: backup letsencrypt data
  when: RENEW
  shell: tar cvf /var/backups/letsencrypt/letsencrypt_{{ ansible_date_time.date }}.tgz

- name: delete old certs and config
  when: RENEW
  file: path={{ item }} state=absent
  with_fileglob:
    - /var/data/letsencrypt/live/*
    - /var/data/letsencrypt/renewal/*
    - /var/data/letsnencrypt/archive/*

- name: get new certs
  docker_container:
    name: letsencrypt
    image: quay.io/letsencrypt/letsencrypt:latest
    recreate: yes
    detach: no
    volumes_from:
      - letsencrypt-data
    entrypoint: certbot
    command: "{{ certbot_cmd + certbot_args + ['-d', item.DOMAIN]}}"
  with_items: "{{ UPSTREAM_APPS }}"

- name: wait for certs
  wait_for: path="/var/data/letsencrypt/live/{{ item.DOMAIN }}" timeout=5
  with_items: "{{ UPSTREAM_APPS }}"

- name: template nginx conf files
  template: dest="/var/data/nginx/{{ item.DOMAIN }}.conf" src=nginx.conf.j2
  vars:
    CONTAINER_NAME: "{{ item.CONTAINER_NAME }}"
    PROXY_PASS_PORT: "{{ item.PROXY_PASS_PORT }}"
  with_items: "{{ UPSTREAM_APPS }}"
  notify: reload nginx

